{"version":3,"sources":["components/Form/ContactForm.styled.jsx","components/Form/ContactForm.jsx","components/List/ContactList.styled.jsx","components/List/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Title.styled.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","nameId","uuidv4","telId","handleSubmit","e","preventDefault","props","onSubmit","reset","handleNameChange","currentTarget","value","setState","this","htmlFor","type","pattern","title","required","id","onChange","Component","List","ul","Name","p","Item","li","ContactList","contacts","onDeleteContacts","map","onClick","Filter","Title","h2","App","filter","formSubmitHandler","find","contact","toLowerCase","alert","newContact","deleteContacts","contactId","prevState","changeFilter","normalizedFilter","toLocaleLowerCase","activeContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5657a21b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  max-width: 400px;\n  background: orange;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-family: \"Roboto\", sans-serif;\n  color: green;\n  text-transform: uppercase;\n  font-size: 24px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  width: 100%;\n  line-height: 40px;\n  color: green;\n  border-width: 0px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 40px 0 15px;\n  width: 103%;\n  border-width: 0;\n  line-height: 40px;\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: green;\n`;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nexport class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = uuidv4();\n  telId = uuidv4();\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  handleNameChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n          />\n        </Label>\n\n        <Label htmlFor={this.telId}>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={this.telId}\n            value={this.state.number}\n            onChange={this.handleNameChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">Add to contacts</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: green;\n`;\n\nexport const List = styled.ul`\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  list-style: none;\n  max-width: 400px;\n`;\n\nexport const Name = styled.p`\n  display: block;\n  padding: 0 15px;\n  color: black;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 18px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, List, Name, Item } from \"./ContactList.styled\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <Item key={id}>\n        <Name>\n          {name} : {number}\n        </Name>\n        <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\n      </Item>\n    ))}\n  </List>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContacts: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: block;\n  margin: 50px auto 0;\n  width: 400px;\n  color: green;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  width: 100%;\n  border-width: 0;\n  line-height: 40px;\n  color: black;\n  border: solid green 1px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, Input } from \"./Filter.styled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={value} onChange={onChange}></Input>\n      </Label>\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  display: block;\n  margin: 50px auto 0;\n  width: 400px;\n  font-family: \"Roboto\", sans-serif;\n  color: green;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 34px;\n`;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/Form/ContactForm\";\nimport ContactList from \"./components/List/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { Title } from \"./components/Title.styled\";\nimport \"./App.css\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (name, number) => {\n    if (\n      this.state.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContacts = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    const activeContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <Title>Contacts</Title>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={activeContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}